---
import Layout from "../../layouts/Layout.astro";
import "../../styles/global.css";

import imgHeroAfrique from "../../assets/img/img-hero-afrique.webp";
import imgSepAfrique from "../../assets/img/img-sep-afrique.webp";

import Carousel_infini from '../../components/Carousel_infini.astro';
import Carousel from '../../components/Carousel.astro';

import { getProduitsAfrique } from "../../../backend/testback.js";
const produitsAfrique = await getProduitsAfrique();


// PRODUITS PHARES
import burrataImg from '../../assets/img/burrata.webp';
import epiceImg from '../../assets/img/epice.webp';
import paprikaImg from '../../assets/img/paprika.webp';
import jerkyImg from '../../assets/img/jerky.webp';
import gloriaImg from '../../assets/img/gloria.webp';

// IMG CAROUSSELS PLAT PREF
import pref1 from '../../assets/img/plat_pref1.webp';
import pref2 from '../../assets/img/plat_pref2.webp';
import pref3 from '../../assets/img/plat_pref3.webp';

// RECETTES 
import recette1 from '../../assets/img/afrique_plat_pref5.webp';
import recette2 from '../../assets/img/afrique_plat_pref2.webp';
import recette3 from '../../assets/img/afrique_plat_pref3.webp';
import recette4 from '../../assets/img/afrique_plat_pref6.webp';
import recette5 from '../../assets/img/afrique_plat_pref1.webp';

const produitPhares = [
  { image: burrataImg.src, alt: 'Burrata', name: 'Burrata' },
  { image: epiceImg.src, alt: 'Bocal d\'\u00e9pices', name: '\u00c9pices' },
  { image: paprikaImg.src, alt: 'Paprika McCormick', name: 'Paprika McCormick' },
  { image: jerkyImg.src, alt: 'Kruga Biltong', name: 'Kruga Biltong' },
  { image: gloriaImg.src, alt: 'Gloria Cassis', name: 'Gloria Cassis' }
];


const recipeItems = [
  { image: recette1.src, alt: 'Recette 1', title: 'Nom Recette 1' },
  { image: recette2.src, alt: 'Recette 2', title: 'Nom Recette 2' },
  { image: recette3.src, alt: 'Recette 3', title: 'Nom Recette 3' },
  { image: recette4.src, alt: 'Recette 4', title: 'Nom Recette 4' },
  { image: recette5.src, alt: 'Recette 5', title: 'Nom Recette 5' },
];


const favoriteRecipes = [
  {
    image: pref1.src,
    title: "Kimchi Jjigae üá∞üá∑",
    subtitle: "D√©couvrez ce rago√ªt tr√®s √©pic√©",
    description: "Un rago√ªt √©pic√© √† base de kimchi ferment√©, de tofu, de porc ou de thon, et de divers assaisonnements comme le gochujang."
  },
  {
    image: pref2.src,
    title: "Feijoada üáßüá∑",
    subtitle: "Envie d'un rago√ªt riche en saveurs",
    description: "Rago√ªt de haricots noirs et de viande de porc, souvent servi avec du riz et des rondelles d'orange."
  },
  {
    image: pref3.src,
    title: "Ceviche",
    subtitle: "La fra√Æcheur en bouche",
    description: "Plat √† base de poisson cru marin√© dans du jus de citron vert avec oignons rouges, coriandre et piment."
  }
];
---

<Layout title="Cuisine Africaine" description="D√©couvrez la cuisine Africaine !">
<main class="relative bg-[var(--color-background)] overflow-hidden pb-24">
    <!-- Titre AFRIQUE -->
    <div class="relative z-20 flex justify-center">
        <h1
            class="text-[4.25rem] md:text-[6rem] font-extrabold text-[var(--color-green-main)] leading-none  mt-25 mb-[-2rem]"
        >
            AFRIQUE
        </h1>
    </div>

    <!-- Image -->
    <div class="relative z-10 flex justify-center mt-12">
      <img
        src={imgHeroAfrique.src}
        alt="Cuisine africaine"
        class="w-full max-w-[500px] h-auto"
      />
    </div>

    <!-- Grille rouge -->
    <div
        class="absolute z-0 left-1/2 -translate-x-1/2 top-[358px] pointer-events-none"
    >
        <div
            class="grid grid-cols-11 grid-rows-6 gap-0"
            style="
                width: calc(100vw - 14px);
                max-width: 525px;
                margin-bottom: 25px;
            "
        >
            {
                Array.from({ length: 66 }).map((_, i) => (
                    <div
                        key={i}
                        class="aspect-square border border-[var(--color-green-main)]"
                    />
                ))
            }
        </div>
    </div>
    

    <!-- Espace r√©serv√© pour la grille -->
    <div class="h-[calc((100vw-14px)/11*6)] max-h-[250px] mb-[45px]"></div>

    <!-- Section Recherche Produit -->
    <section
        class="bg-[var(--color-green-shade-5)] py-10 px-4 flex justify-center"
    >
        <div
            class="bg-[var(--color-green-main)] text-white rounded-2xl w-full max-w-md p-6 text-center shadow-lg"
        >
            <p class="text-lg font-semibold mb-4">Vous cherchez un produit ?</p>
            <div
                class="bg-white rounded-full px-4 py-2 flex items-center gap-2"
            >
                <img
                    src="/src/assets/icons/green-search.svg"
                    alt="Recherche"
                    class="w-5 h-5"
                />
                <input
                    id="searchInput"
                    type="text"
                    placeholder="Rechercher..."
                    class="flex-1 bg-transparent outline-none text-[var(--color-green-shade-1)] placeholder:text-[var(--color-green-shade-2)]"
                />
            </div>
        </div>
    </section>

    <!-- Filtres + Cards dans un bloc rose clair -->
    <section class="bg-[var(--color-green-shade-5)] py-10 px-4">
        <!-- Filtres de cat√©gories -->
        <div
            class="flex flex-wrap justify-center gap-4 mb-8 text-[var(--color-green-main)] font-semibold"
        >
            <button class="filter-btn hover:underline transition-all duration-200" data-filter="all">Voir tous</button>
            <button class="filter-btn hover:underline transition-all duration-200" data-filter="condiments">Condiments & Sauces</button>
            <button class="filter-btn hover:underline transition-all duration-200" data-filter="boissons">Boissons</button>
            <button class="filter-btn hover:underline transition-all duration-200" data-filter="epicerie-salee">√âpicerie sal√©e</button>
            <button class="filter-btn hover:underline transition-all duration-200" data-filter="epices">√âpices</button>
            <button class="filter-btn hover:underline transition-all duration-200" data-filter="snacks">Snacks & Confiseries</button>
        </div>

        <!-- Message "Aucun r√©sultat" -->
        <div id="noResults" class="text-center text-[var(--color-green-main)] text-lg mt-8 hidden">
            <p>Aucun produit trouv√© pour votre recherche.</p>
        </div>

        <!-- Grille de cards produits dynamiques -->
        <div id="productsGrid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
         {
            produitsAfrique.map(produit => (          
              <div class="product-card bg-white rounded-2xl p-4 shadow-md flex flex-col gap-2"
                   data-name={produit.nom_produit || ''}
                   data-category={produit.categorie_produit || ''}>
                <!-- Image -->
                <img
                  src={`https://pb-yumly.leo-baudry.fr/api/files/Produit/${produit.id}/${produit.photo_produit}`}
                  alt={produit.nom_produit || 'Produit'}
                  class="w-full h-32 object-contain rounded-md"
                  onerror="this.src='/src/assets/placeholder.jpg'"
                />
                
                <!-- Infos -->
                <div class="flex justify-between items-end mt-2 flex-1">
                  <div class="text-left text-[var(--color-blue-main)]">
                    <p class="text-sm">{produit.categorie_produit || 'Cat√©gorie'}</p>
                    <h2 class="font-semibold">{produit.nom_produit || 'Produit sans nom'}</h2>
                    <p class="text-lg font-bold">{produit.prix_produit ? `${produit.prix_produit}‚Ç¨` : 'Prix non disponible'}</p>
                  </div>
                  <button class="heart-btn">
                    <img
                      src="/src/assets/icons/heart.svg"
                      alt="Ajouter aux favoris"
                      class="w-6 h-6 transition-all duration-200"
                    />
                  </button>
                </div>
              </div>
            ))
          }
        </div>
    </section>

    <!-- S√©parateur graphique avec image parfaitement centr√©e et grille align√©e -->
    <div class="relative mt-50">
      <!-- Bloc responsif avec max-height -->
      <div class="relative w-full max-w-[600px] h-[calc(55px*10)] mx-auto overflow-hidden">
        
        <!-- Grille centr√©e -->
        <div
          class="absolute z-0 left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 pointer-events-none"
        >
          <div
            class="grid grid-cols-[repeat(10,55px)] grid-rows-[repeat(10,55px)] gap-0"
            style="width: 550px; height: 660px;"
          >
            {
              Array.from({ length: 120 }).map((_, i) => (
                <div key={i} class="border border-green-700 aspect-square" />
              ))
            }
          </div>
        </div>

        <!-- Image parfaitement centr√©e et responsive -->
        <div class="absolute z-10 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full sm:w-[600px]">
          <img
            src={imgSepAfrique.src}
            alt="S√©parateur Asie"
            class="w-full h-auto object-cover"
          />
        </div>
      </div>
    </div>

      <!-- Titre VOS RECETTES PR√âF√âR√âES -->
      <div class="relative z-10 text-center mt-50 mb-[-1.5rem]">
        <div class="bg-green-main text-white font-bold text-lg py-3 px-6 inline-block rounded shadow-md z-20 relative">
          VOS RECETTES PR√âF√âR√âES
        </div>
      </div>

      <!-- Section avec fond rose et cartes recettes -->
      <section class="relative pt-[3rem] px-4 bg-green-shade-4 overflow-hidden z-0">
        <div class="flex gap-6 overflow-x-auto px-4 scrollbar-hide pb-10">
          {favoriteRecipes.map((r, index) => (
            <div class="flex-shrink-0 w-64 bg-background p-5 rounded-lg shadow-md relative text-left" key={index}>
              
              <!-- Image grande en haut √† droite, dans la card -->
              <div class="flex justify-end pl-2">
                <img 
                  src={r.image} 
                  alt={r.title} 
                  class="w-28 h-28 object-cover rounded-full mb-4" 
                />
              </div>

              <!-- Texte en dessous de l'image -->
              <h3 class="text-green-main font-extrabold text-lg mb-1">{r.title}</h3>
              <p class="font-semibold text-grey-9 mb-2">{r.subtitle}</p>
              <p class="text-grey-7 text-sm">{r.description}</p>
            </div>
          ))}
        </div>
      </section>




    <!-- S√©parateur Damier CSS -->
    <div class="w-full h-[90px] mt-50 bg-damier-checkerboard-green"></div>

    <!-- Bloc FACTS style maquette toujours horizontal -->
    <section class="px-4 py-12 mt-1">
      <div class="border-2 border-green-main mx-auto bg-[var(--color-background)] flex flex-row w-full max-w-[700px] rounded-md overflow-hidden">

        <!-- Image √† gauche -->
        <div class="w-[50%] min-w-[150px] max-w-[300px]">
          <img 
            src="/src/assets/img/img-fact-afrique.webp" 
            alt="Enfant au march√© asiatique" 
            class="w-full h-full object-cover"
          />
        </div>

        <!-- Texte √† droite -->
        <div class="w-[50%] p-1 flex flex-col justify-start">
          <!-- Badge pleine largeur -->
          <div class="bg-green-shade-3 text-white font-bold text-lg px-4 py-2 shadow-md text-center w-full">
            FACTS
          </div>

          <!-- Texte -->
          <div class="mt-10 text-grey-9 text-sm sm:text-base leading-relaxed">
            En Afrique du Sud, un √©picier a trouv√© une m√©thode radicale pour √©viter les cambriolages : installer une cage avec un vrai lion derri√®re son magasin. <br><br>Plus besoin de cam√©ras, ils pr√©f√®rent garder leurs distances‚Ä¶
        </div>
        </div>

      </div>
    </section>

    <!-- Nos Recettes Inspirantes avec grille verte centr√©e -->
    <section class="relative mt-50 py-12 px-4 bg-[var(--color-background)] overflow-hidden min-h-[400px]">
      <!-- Grille centr√©e -->
      <div
        class="absolute z-0 left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 pointer-events-none"
      >
        <div
          class="grid grid-cols-[repeat(10,55px)] grid-rows-[repeat(6,55px)] gap-0"
          style="width: 550px; height: 330px;"
        >
          {
            Array.from({ length: 60 }).map((_, i) => (
              <div key={i} class="border border-green-700 aspect-square" />
            ))
          }
        </div>
      </div>

      <!-- Contenu r√©el au-dessus -->
      <div class="relative z-10">
        <Carousel items={recipeItems} />
      </div>
    </section>

    <!-- Nos Produits Phares -->
    <section class="py-50 mt-5  px-4">
      <h2 class="text-center font-bold text-3xl text-green-main mb-10">NOS PRODUITS PHARES</h2>
      <div class="max-w-4xl mx-auto">
        <Carousel items={produitPhares} itemWidthClass="w-32 sm:w-40 md:w-44" itemHeightClass="h-32 sm:h-40 md:h-44" gapClass="gap-4 sm:gap-6 md:gap-8" containerPaddingClass="py-8 px-4" showNames={true} />
      </div>
    </section>
</main>
</Layout>

<style>
    .filter-active {
        background-color: var(--color-green-main);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 9999px;
    }
    
    .card-hidden {
        display: none;
    }
    
    .heart-btn:hover img {
        filter: brightness(0) saturate(100%) invert(16%) sepia(99%) saturate(7404%) hue-rotate(3deg) brightness(95%) contrast(118%);
    }
</style>

<script>
    class ProductFilter {
        constructor() {
            this.searchInput = document.getElementById('searchInput');
            this.filterButtons = document.querySelectorAll('.filter-btn');
            this.productCards = document.querySelectorAll('.product-card');
            this.noResults = document.getElementById('noResults');
            this.currentFilter = 'all';
            this.currentSearch = '';
            
            // Mapping des filtres vers les cat√©gories
            this.filterMapping = {
                'all': [], // Toutes les cat√©gories
                'condiments': ['Condiments & Sauces', 'Condiments', 'Sauces'],
                'boissons': ['Boissons', 'Boissons sans alcool', 'Boissons alcoolis√©es'],
                'epicerie-salee': ['√âpicerie sal√©e', 'Produits frais'],
                'epices': ['√âpices'],
                'snacks': ['Snacks & Confiseries', 'Snacks', 'Confiseries']
            };
            
            this.init();
        }
        
        init() {
            // √âv√©nement de recherche
            this.searchInput?.addEventListener('input', (e) => {
                this.currentSearch = e.target.value.toLowerCase().trim();
                this.filterProducts();
            });
            
            // √âv√©nements des filtres
            this.filterButtons.forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    this.setActiveFilter(e.target);
                    this.currentFilter = e.target.dataset.filter;
                    this.filterProducts();
                });
            });
            
            // √âv√©nements des c≈ìurs
            document.querySelectorAll('.heart-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    const img = btn.querySelector('img');
                    if (img) {
                        img.style.filter = img.style.filter ? '' : 'brightness(0) saturate(100%) invert(16%) sepia(99%) saturate(7404%) hue-rotate(3deg) brightness(95%) contrast(118%)';
                    }
                });
            });
            
            // D√©finir le filtre par d√©faut
            if (this.filterButtons.length > 0) {
                this.setActiveFilter(this.filterButtons[0]);
            }
        }
        
        setActiveFilter(activeButton) {
            this.filterButtons.forEach(btn => {
                btn.classList.remove('filter-active');
            });
            activeButton.classList.add('filter-active');
        }
        
        matchesCategory(productCategory, filter) {
            if (filter === 'all') {
                return true;
            }
            
            const allowedCategories = this.filterMapping[filter] || [];
            return allowedCategories.some(category => 
                productCategory.toLowerCase().includes(category.toLowerCase()) ||
                category.toLowerCase().includes(productCategory.toLowerCase())
            );
        }
        
        filterProducts() {
            let visibleCount = 0;
            
            this.productCards.forEach(card => {
                const name = (card.dataset.name || '').toLowerCase();
                const category = card.dataset.category || '';
                
                // V√©rifier le filtre de cat√©gorie avec mapping
                const matchesFilter = this.matchesCategory(category, this.currentFilter);
                
                // V√©rifier la recherche
                const matchesSearch = this.currentSearch === '' || name.includes(this.currentSearch);
                
                if (matchesFilter && matchesSearch) {
                    card.classList.remove('card-hidden');
                    visibleCount++;
                } else {
                    card.classList.add('card-hidden');
                }
            });
            
            // Afficher/masquer le message "Aucun r√©sultat"
            if (this.noResults) {
                if (visibleCount === 0) {
                    this.noResults.classList.remove('hidden');
                } else {
                    this.noResults.classList.add('hidden');
                }
            }
        }
    }
    
    // Initialiser le syst√®me de filtrage au chargement de la page
    document.addEventListener('DOMContentLoaded', () => {
        new ProductFilter();
    });
</script>